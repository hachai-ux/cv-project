{"version":3,"sources":["components/GeneralInformation.js","components/EducationalExperience.js","components/PracticalExperience.js","App.js","index.js"],"names":["GeneralInformation","handleChange","e","target","id","setState","name","value","email","phoneNumber","onSubmit","preventDefault","isSubmitted","onEdit","state","this","htmlFor","onChange","type","onClick","Component","EducationalExperience","props","schoolName","studyTitle","studyDateFrom","studyDateTo","remove","PracticalExperience","companyName","positionTitle","mainTasks","dateFrom","dateTo","App","addEducationalExperienceSections","uniqid","keyListEE","concat","addPracticalExperienceSections","keyListPE","removeEEComponent","filter","removePEComponent","renderChild","educationalExperienceSections","map","practicalExperienceSections","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.356098b4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport '../styles/style.css';\n \nclass GeneralInformation extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            name: '',\n            email: '',\n            phoneNumber: '',\n            isSubmitted: false,\n        }\n\n    }\n\n    handleChange = (e) => {\n        switch (e.target.id) {\n            case 'name':\n                this.setState({\n                    name: e.target.value,\n                });\n            break;\n            case 'email':\n                this.setState({\n                    email: e.target.value,\n                });\n             break;\n            case 'phone-number':\n                this.setState({\n                    phoneNumber: e.target.value,\n                });\n                break;\n            default:\n                break;\n        }\n        \n        \n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            isSubmitted: true,\n        })\n    }\n\n\n    onEdit = (e) => {\n        e.preventDefault();\n        this.setState({\n            isSubmitted: false,\n        })\n    }\n\n    render() {\n\n        const { name, email, phoneNumber, isSubmitted } = this.state;\n\n        if(isSubmitted === false){\n            return (\n                <div>\n                    <form onSubmit={this.onSubmit}>\n                        <label htmlFor=\"name\">Name:\n                            <input onChange={this.handleChange} value={name} type=\"text\" id=\"name\" />\n                        </label>\n                        <label htmlFor=\"email\">Email:\n                        <input onChange={this.handleChange} value={email} type=\"text\" id=\"email\"/>\n                        </label>\n                        <label htmlFor=\"phone-number\">Phone Number:\n                        <input onChange={this.handleChange} value={phoneNumber} type=\"text\" id=\"phone-number\"/>\n                        </label>\n                        <button type=\"submit\">\n                            Submit\n                        </button>\n                    </form>\n                    \n                </div>\n            )\n        }\n        else if (isSubmitted === true) {\n\n                \n            return (\n                <div>\n                    <p>Name: {name}</p>\n                    <p>Email: {email}</p>\n                    <p>Phone Number: {phoneNumber}</p>\n                    \n                    <button onClick={this.onEdit} type=\"button\">\n                            Edit\n                        </button>\n                    \n                </div>\n            )\n        }\n    }\n}\n\nexport default GeneralInformation;","import React, {Component} from \"react\";\n \nclass EducationalExperience extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \n                schoolName: '',\n                studyTitle: '',\n                studyDateFrom: '',\n                studyDateTo: '',\n                isSubmitted: false,\n          \n            \n            \n        };\n\n    }\n\n    handleChange = (e) => {\n        switch (e.target.id) {\n            case 'school-name':\n                this.setState({\n                    schoolName: e.target.value,\n                });\n            break;\n            case 'study-title':\n                this.setState({\n                    studyTitle: e.target.value,\n                });\n             break;\n            case 'study-date-from':\n                this.setState({\n                    studyDateFrom: e.target.value,\n                });\n                break;\n            case 'study-date-to':\n                this.setState({\n                    studyDateTo: e.target.value,\n                });\n                break;\n            default:\n                break;\n        }\n        \n        \n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            isSubmitted: true,\n        })\n    }\n\n\n    onEdit = (e) => {\n        e.preventDefault();\n        this.setState({\n            isSubmitted: false,\n        })\n    }\n\n\n\n    render() {\n\n        const {schoolName, studyTitle, studyDateFrom, studyDateTo, isSubmitted } = this.state;\n\n        \n        if(isSubmitted === false){\n            return (\n                <div>\n                    <form onSubmit={this.onSubmit}>\n                        <label htmlFor=\"school-name\">School Name:\n                            <input onChange={this.handleChange} value={schoolName} type=\"text\" id=\"school-name\" />\n                        </label>\n\n                        <label htmlFor=\"study-title\">Title of Study:\n                        <input onChange={this.handleChange} value={studyTitle} type=\"text\" id=\"study-title\" />\n                        </label>\n                            \n                            <label htmlFor=\"study-date-from\">From:\n                        <input onChange={this.handleChange} value={studyDateFrom} type=\"date\" id=\"study-date-from\"/>\n                        </label>\n\n                        <label htmlFor=\"study-date-to\">To:\n                        <input onChange={this.handleChange} value={studyDateTo} type=\"date\" id=\"study-date-to\"/>\n                        </label>\n\n                        <button type=\"submit\">\n                            Submit\n                        </button>\n                        <button onClick={this.props.remove} id={this.props.id} type=\"button\">\n                            Delete\n                        </button>\n                    </form>\n                    \n                </div>\n            )\n        }\n        else if (isSubmitted === true) {\n\n                \n            return (\n                <div>\n                    <p>School Name: {schoolName}</p>\n                    <p>Title of Study: {studyTitle}</p>\n                    <p>From: {studyDateFrom}</p>\n                    <p>To: {studyDateTo}</p>\n                    \n                    <button onClick={this.onEdit} type=\"button\">\n                            Edit\n                        </button>\n                    \n                </div>\n            )\n        }\n    }\n}\n\nexport default EducationalExperience;\n\n//create list here?","import React, {Component} from \"react\";\n \nclass PracticalExperience extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \n                companyName: '',\n                positionTitle: '',\n                mainTasks: '',\n                dateFrom: '',\n                dateTo: '',\n                isSubmitted: false,\n          \n            \n            \n        };\n\n    }\n\n    handleChange = (e) => {\n        switch (e.target.id) {\n            case 'company-name':\n                this.setState({\n                    companyName: e.target.value,\n                });\n            break;\n            case 'position-title':\n                this.setState({\n                    positionTitle: e.target.value,\n                });\n                break;\n            case 'main-tasks':\n                this.setState({\n                    mainTasks: e.target.value,\n                });\n             break;\n            case 'date-from':\n                this.setState({\n                    dateFrom: e.target.value,\n                });\n                break;\n            case 'date-to':\n                this.setState({\n                    dateTo: e.target.value,\n                });\n                break;\n            default:\n                break;\n        }\n        \n        \n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            isSubmitted: true,\n        })\n    }\n\n\n    onEdit = (e) => {\n        e.preventDefault();\n        this.setState({\n            isSubmitted: false,\n        })\n    }\n\n\n\n    render() {\n\n        const {companyName, positionTitle, mainTasks, dateFrom, dateTo, isSubmitted } = this.state;\n\n        \n        if(isSubmitted === false){\n            return (\n                <div>\n                    <form onSubmit={this.onSubmit}>\n                        <label htmlFor=\"company-name\">Company Name:\n                            <input onChange={this.handleChange} value={companyName} type=\"text\" id=\"company-name\" />\n                        </label>\n\n                        <label htmlFor=\"position-title\">Title of Position:\n                        <input onChange={this.handleChange} value={positionTitle} type=\"text\" id=\"position-title\" />\n                        </label>\n\n                        <label htmlFor=\"main-tasks\">Main Tasks:\n                        <textarea onChange={this.handleChange} value={mainTasks} id=\"main-tasks\" />\n                        </label>\n                            \n                            <label htmlFor=\"date-from\">From:\n                        <input onChange={this.handleChange} value={dateFrom} type=\"date\" id=\"date-from\"/>\n                        </label>\n\n                        <label htmlFor=\"date-to\">To:\n                        <input onChange={this.handleChange} value={dateTo} type=\"date\" id=\"date-to\"/>\n                        </label>\n\n                        <button type=\"submit\">\n                            Submit\n                        </button>\n                        <button onClick={this.props.remove} id={this.props.id} type=\"button\">\n                            Delete\n                        </button>\n                    </form>\n                    \n                </div>\n            )\n        }\n        else if (isSubmitted === true) {\n\n                \n            return (\n                <div>\n                    <p>Company Name: {companyName}</p>\n                    <p>Title of Position: {positionTitle}</p>\n                     <p>Main Tasks: {mainTasks}</p>\n                    <p>From: {dateFrom}</p>\n                    <p>To: {dateTo}</p>\n                    \n                    <button onClick={this.onEdit} type=\"button\">\n                            Edit\n                        </button>\n                    \n                </div>\n            )\n        }\n    }\n}\n\nexport default PracticalExperience;\n\n//create list here?","import React, { Component } from \"react\";\nimport GeneralInformation from \"./components/GeneralInformation\";\nimport EducationalExperience from \"./components/EducationalExperience\";\nimport PracticalExperience from \"./components/PracticalExperience\";\nimport uniqid from \"uniqid\";\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      renderChild: true,\n      keyListEE: [],\n      keyListPE: [],\n    }\n  }\n\n\n  addEducationalExperienceSections = () => {\n    //create key when clicking on add button\n    const id = uniqid();\n    this.setState({\n      keyListEE: this.state.keyListEE.concat(id),\n    });\n  }\n\n  addPracticalExperienceSections = () => {\n    //create key when clicking on add button\n    const id = uniqid();\n    this.setState({\n      keyListPE: this.state.keyListPE.concat(id),\n    });\n  }\n\n  removeEEComponent = (e) => {\n    //non-mutating state change to remove component\n    this.setState({keyListEE: this.state.keyListEE.filter(id => id!== e.target.id)})\n  }\n\n  removePEComponent = (e) => {\n    //non-mutating state change to remove component\n    this.setState({keyListPE: this.state.keyListPE.filter(id => id!== e.target.id)})\n  }\n \n \n  render() {\n    \n    //function and key passed down as prop\n    //EESections created/mapped for keyList\n    //Components are created from keyList and then put into the return\n\n    const educationalExperienceSections = this.state.keyListEE.map((id) => {\n      return <EducationalExperience remove={this.removeEEComponent} key = {id} id = {id} />\n    })\n\n     const practicalExperienceSections = this.state.keyListPE.map((id) => {\n      return <PracticalExperience remove={this.removePEComponent} key = {id} id = {id} />\n    })\n\n\n    return (\n    <div className=\"App\">\n      <h1>General Information</h1>\n      <GeneralInformation />\n        <h1>Educational Experience</h1>\n         {educationalExperienceSections}\n        <button onClick={this.addEducationalExperienceSections}>Add</button>\n        <h1>Practical Experience</h1>\n         {practicalExperienceSections}\n        <button onClick={this.addPracticalExperienceSections}>Add</button>\n\n       \n    </div>\n  );\n}\n\n\n  }\n  \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}